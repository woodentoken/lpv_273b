% 1 model_geometry.m
% 2 derived-quantities.m
% 3 Nelson_nd_derivatives.m
% 4 dimensional_derivatives.m
% 5 **longitudinal_eom.m**

% call the dimensional derivatives script
m4_dimensional_derivatives
m = mass;
g = 9.81;
 
% longitudinal dynamical system
% E xdot = A x + B u
% acceleration coefficient matrix (inertial matrix)

% state vector = [forward speed, vertical speed, pitch rate, pitch angle];
A_hat = [
    [Xu   Xw    Xq   -*g];
    [Zu   Zw    1     0  ];
    [Mu   Ma    Mq    0  ];
    [0    0     1     0  ];
]; % 4 x 4

% control vector = [elevator deflection, thrust command];
B_hat = [
    [Xdel_e   Xdel_T];
    [Zdel_e   Zdel_T];
    [Mdel_e   Mdel_T];
    [0        0     ];
]; % 4 x 2

A = A_hat\E;
B = B_hat\E;
C=eye(4); % assume perfect state knowledge
D=0*eye(4);

% 4DOF longitudinal system
longitudinal_system = ss(A, B, C, D);